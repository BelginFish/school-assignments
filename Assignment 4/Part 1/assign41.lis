                        .module assign41.c
                        .area text
 0000                   .dbfile M:\SYSC20~2\Assignments\ASSIGN~3\PART1~1\assign41.c
 0000                   .dbfunc e main _main fI
 0000           _main::
 0000                   .dbline -1
 0000                   .dbline 16
 0000           ; //#include <hc12.h>
 0000           ; #include <hcs12dp256.h>
 0000           ; #include <stdio.h>
 0000           ; 
 0000           ; void delay(int ms);
 0000           ; void keyboard_init(void);
 0000           ; int  keyboard_get_column(void);
 0000           ; void keyboard_scan(void);
 0000           ; void keyboard_pushed(int row, int col);
 0000           ; 
 0000           ; //char collision_detection (int speed, unsigned int * proximity);
 0000           ; //void change_speed(int * speed, int value);
 0000           ; 
 0000           ; 
 0000           ; int main()
 0000           ; {
 0000                   .dbline 17
 0000           ;       setbaud(BAUD19K);
 0000 CC001A            ldd #26
 0003 160000            jsr _setbaud
 0006                   .dbline 18
 0006           ;       keyboard_init();
 0006 1600C9            jsr _keyboard_init
 0009                   .dbline 19
 0009           ;       keyboard_scan();
 0009 160010            jsr _keyboard_scan
 000C                   .dbline 20
 000C           ;       return 1;
 000C CC0001            ldd #1
 000F                   .dbline -2
 000F           L3:
 000F                   .dbline 0 ; func end
 000F 3D                rts
 0010                   .dbend
 0010                   .dbfunc e keyboard_scan _keyboard_scan fV
 0010           ;            col -> -4,x
 0010           ;            row -> -2,x
 0010           _keyboard_scan::
 0010 34                pshx
 0011 B775              tfr s,x
 0013 1B98              leas -8,sp
 0015                   .dbline -1
 0015                   .dbline 24
 0015           ; }
 0015           ; 
 0015           ; void keyboard_scan()
 0015           ; {
 0015                   .dbline 25
 0015           ;       int row = 0;
 0015 CC0000            ldd #0
 0018 6C1E              std -2,x
 001A                   .dbline 26
 001A           ;       int col = 0;
 001A CC0000            ldd #0
 001D 6C1C              std -4,x
 001F 2045              bra L6
 0021           L5:
 0021                   .dbline 28
 0021           ; 
 0021           ;       while ( 1 ) {
 0021                   .dbline 29
 0021           ;               PTP = 0x01 << row;
 0021 CC0001            ldd #1
 0024 ED1E              ldy -2,x
 0026 8D0000            cpy #0
 0029 2704              beq X0
 002B           X1:
 002B 59                lsld
 002C 0436FC            dbne y,X1
 002F           X0:
 002F 7B0258            stab 0x258
 0032                   .dbline 31
 0032           ; 
 0032           ;               col = keyboard_get_column();
 0032 1600D6            jsr _keyboard_get_column
 0035 6C1C              std -4,x
 0037                   .dbline 34
 0037           ; 
 0037           ;               // Only react if a button was pushed
 0037           ;               if ( PTH & 0xF0 ) {
 0037 1F0260F01A        brclr 0x260,#240,L8
 003C                   .dbline 34
 003C                   .dbline 35
 003C           ;                       delay(20); // delay for debounce
 003C CC0014            ldd #20
 003F 16010F            jsr _delay
 0042                   .dbline 37
 0042           ; 
 0042           ;                       if ( col == keyboard_get_column() ) { 
 0042 1600D6            jsr _keyboard_get_column
 0045 6C1A              std -6,x
 0047 EC1C              ldd -4,x
 0049 AC1A              cpd -6,x
 004B 2609              bne L10
 004D                   .dbline 37
 004D                   .dbline 38
 004D           ;                               keyboard_pushed(row, col);
 004D 18021C80          movw -4,x,0,sp
 0051 EC1E              ldd -2,x
 0053 16007C            jsr _keyboard_pushed
 0056                   .dbline 40
 0056           ;                               //printf("Row %d, column %d\n", row_mask, col);
 0056           ;                       }
 0056           L10:
 0056                   .dbline 41
 0056           ;               }
 0056           L8:
 0056                   .dbline 44
 0056 EC1E              ldd -2,x
 0058 C30001            addd #1
 005B CD0004            ldy #4
 005E B7D6              exg x,y
 0060 1815              idivs
 0062 B7D6              exg x,y
 0064 6C1E              std -2,x
 0066                   .dbline 45
 0066           L6:
 0066                   .dbline 28
 0066 20B9              bra L5
 0068           X2:
 0068                   .dbline -2
 0068                   .dbline 46
 0068           ; 
 0068           ;               // Change rows each iteration            
 0068           ;               row = (row+1) % 4;
 0068           ;       }
 0068           ; }
 0068           L4:
 0068 B757              tfr x,s
 006A 30                pulx
 006B                   .dbline 0 ; func end
 006B 3D                rts
 006C                   .dbsym l col -4 I
 006C                   .dbsym l row -2 I
 006C                   .dbend
 006C           L13:
 006C 3132              .byte 49,50
 006E 3341              .byte 51,'A
 0070 3435              .byte 52,53
 0072 3642              .byte 54,'B
 0074 3738              .byte 55,56
 0076 3943              .byte 57,'C
 0078 4530              .byte 'E,48
 007A 4644              .byte 'F,'D
 007C                   .dbfunc e keyboard_pushed _keyboard_pushed fV
 007C           ;       char_arr -> -16,x
 007C           ;            col -> 6,x
 007C           ;            row -> 2,x
 007C           _keyboard_pushed::
 007C 3B                pshd
 007D 34                pshx
 007E B775              tfr s,x
 0080 1BF1EC            leas -20,sp
 0083                   .dbline -1
 0083                   .dbline 49
 0083                   .dbline 51
 0083 1910              leay -16,x
 0085 B7C6              xgdy
 0087 CD006C            ldy #L13
 008A 34                pshx
 008B B745              tfr d,x
 008D CC0008            ldd #8
 0090           X3:
 0090 18027131          movw 2,y+,2,x+
 0094 0434F9            dbne d,X3
 0097 30                pulx
 0098                   .dbline 56
 0098 EC02              ldd 2,x
 009A 59                lsld
 009B 59                lsld
 009C 1910              leay -16,x
 009E 6DE1EE            sty -18,x
 00A1 E3E1EE            addd -18,x
 00A4 6CE1EC            std -20,x
 00A7 EC06              ldd 6,x
 00A9 E3E1EC            addd -20,x
 00AC B7C6              xgdy
 00AE E640              ldab 0,y
 00B0 87                clra
 00B1 160000            jsr _putchar
 00B4                   .dbline 57
 00B4 EC06              ldd 6,x
 00B6 8C0001            cpd #1
 00B9 2608              bne L14
 00BB EC02              ldd 2,x
 00BD 8C0003            cpd #3
 00C0 2601              bne L14
 00C2                   .dbline 57
 00C2                   .dbline 58
 00C2 3F                        SWI
 00C3           
 00C3                   .dbline 59
 00C3           L14:
 00C3                   .dbline -2
 00C3                   .dbline 60
 00C3           ; 
 00C3           ; void keyboard_pushed(int row, int col)
 00C3           ; {
 00C3           ;       char char_arr[4][4] =
 00C3           ;               {{'1', '2', '3', 'A'},
 00C3           ;               {'4', '5', '6', 'B'},
 00C3           ;               {'7', '8', '9', 'C'},
 00C3           ;               {'E', '0', 'F', 'D'}};
 00C3           ; 
 00C3           ;       putchar(char_arr[row][col]);
 00C3           ;       if ( col == 1 && row == 3 ) {
 00C3           ;               asm("SWI");
 00C3           ;       }
 00C3           ; }
 00C3           L12:
 00C3 B757              tfr x,s
 00C5 30                pulx
 00C6 1B82              leas 2,sp
 00C8                   .dbline 0 ; func end
 00C8 3D                rts
 00C9                   .dbsym l char_arr -16 A[16:4:4]c
 00C9                   .dbsym l col 6 I
 00C9                   .dbsym l row 2 I
 00C9                   .dbend
 00C9                   .dbfunc e keyboard_init _keyboard_init fV
 00C9           _keyboard_init::
 00C9                   .dbline -1
 00C9                   .dbline 63
 00C9           ; 
 00C9           ; void keyboard_init()
 00C9           ; {
 00C9                   .dbline 64
 00C9           ;       SPI1CR1 = 0x00; // Turn off SPI (not explained why yet)
 00C9 7900F0            clr 0xf0
 00CC                   .dbline 65
 00CC           ;       DDRP = 0x0F; // Enable keyboard and disable motors on port P
 00CC C60F              ldab #15
 00CE 7B025A            stab 0x25a
 00D1                   .dbline 66
 00D1           ;       DDRH = DDRH & 0x0F; // Enable reading from keyboard (High bits of DDRH)
 00D1 1D0262F0          bclr 0x262,#0xf0
 00D5                   .dbline -2
 00D5                   .dbline 67
 00D5           ; }
 00D5           L16:
 00D5                   .dbline 0 ; func end
 00D5 3D                rts
 00D6                   .dbend
 00D6                   .dbfunc e keyboard_get_column _keyboard_get_column fI
 00D6           ;            col -> -2,x
 00D6           _keyboard_get_column::
 00D6 34                pshx
 00D7 B775              tfr s,x
 00D9 1B9E              leas -2,sp
 00DB                   .dbline -1
 00DB                   .dbline 70
 00DB           ; 
 00DB           ; int keyboard_get_column()
 00DB           ; {
 00DB                   .dbline 72
 00DB           ;       int col;
 00DB           ;       if ( PTH & 0x10 ) {
 00DB 1F02601007        brclr 0x260,#16,L18
 00E0                   .dbline 72
 00E0                   .dbline 73
 00E0           ;               col = 0;
 00E0 CC0000            ldd #0
 00E3 6C1E              std -2,x
 00E5                   .dbline 74
 00E5 2022              bra L19
 00E7           L18:
 00E7                   .dbline 74
 00E7           ;       } else if ( PTH & 0x20 ) {
 00E7 1F02602007        brclr 0x260,#32,L20
 00EC                   .dbline 74
 00EC                   .dbline 75
 00EC           ;               col = 1;
 00EC CC0001            ldd #1
 00EF 6C1E              std -2,x
 00F1                   .dbline 76
 00F1 2016              bra L21
 00F3           L20:
 00F3                   .dbline 76
 00F3           ;       } else if ( PTH & 0x40 ) {
 00F3 1F02604007        brclr 0x260,#64,L22
 00F8                   .dbline 76
 00F8                   .dbline 77
 00F8           ;               col = 2;
 00F8 CC0002            ldd #2
 00FB 6C1E              std -2,x
 00FD                   .dbline 78
 00FD 200A              bra L23
 00FF           L22:
 00FF                   .dbline 78
 00FF           ;       } else if ( PTH & 0x80 ) {
 00FF 1F02608005        brclr 0x260,#128,L24
 0104                   .dbline 78
 0104                   .dbline 79
 0104           ;               col = 3;
 0104 CC0003            ldd #3
 0107 6C1E              std -2,x
 0109                   .dbline 80
 0109           ;       }
 0109           L24:
 0109           L23:
 0109           L21:
 0109           L19:
 0109                   .dbline 81
 0109           ;       return col;
 0109 EC1E              ldd -2,x
 010B                   .dbline -2
 010B           L17:
 010B B757              tfr x,s
 010D 30                pulx
 010E                   .dbline 0 ; func end
 010E 3D                rts
 010F                   .dbsym l col -2 I
 010F                   .dbend
 010F                   .dbfunc e delay _delay fV
 010F           ;              i -> -6,x
 010F           ;  delayConstant -> -4,x
 010F           ;              j -> -2,x
 010F           ;             ms -> 2,x
 010F           _delay::
 010F 3B                pshd
 0110 34                pshx
 0111 B775              tfr s,x
 0113 1B9A              leas -6,sp
 0115                   .dbline -1
 0115                   .dbline 85
 0115           ; }
 0115           ; 
 0115           ; void delay(int ms)
 0115           ; {
 0115                   .dbline 86
 0115           ;       const int delayConstant = 1234;
 0115 CC04D2            ldd #1234
 0118 6C1C              std -4,x
 011A                   .dbline 88
 011A CC0000            ldd #0
 011D 6C1A              std -6,x
 011F 201B              bra L30
 0121           L27:
 0121                   .dbline 88
 0121           ;       int i, j;
 0121           ;       for ( i=0; i<ms; i++ ) {
 0121                   .dbline 89
 0121 CC0000            ldd #0
 0124 6C1E              std -2,x
 0126 2007              bra L34
 0128           L31:
 0128                   .dbline 89
 0128                   .dbline 89
 0128           L32:
 0128                   .dbline 89
 0128 EC1E              ldd -2,x
 012A C30001            addd #1
 012D 6C1E              std -2,x
 012F           L34:
 012F                   .dbline 89
 012F EC1E              ldd -2,x
 0131 AC1C              cpd -4,x
 0133 2DF3              blt L31
 0135                   .dbline 90
 0135           L28:
 0135                   .dbline 88
 0135 EC1A              ldd -6,x
 0137 C30001            addd #1
 013A 6C1A              std -6,x
 013C           L30:
 013C                   .dbline 88
 013C EC1A              ldd -6,x
 013E AC02              cpd 2,x
 0140 2DDF              blt L27
 0142                   .dbline -2
 0142                   .dbline 91
 0142           ;               for ( j=0; j < delayConstant; j++ ) {}
 0142           ;       }
 0142           ; }
 0142           L26:
 0142 B757              tfr x,s
 0144 30                pulx
 0145 1B82              leas 2,sp
 0147                   .dbline 0 ; func end
 0147 3D                rts
 0148                   .dbsym l i -6 I
 0148                   .dbsym l delayConstant -4 I
 0148                   .dbsym l j -2 I
 0148                   .dbsym l ms 2 I
 0148                   .dbend
