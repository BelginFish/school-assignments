                        .module assign51.c
                        .area data
 0000           _key:
 0000                   .blkb 1
                        .area idata
 0000 00                .byte 0
                        .area data
 0001                   .dbfile M:\SYSC20~2\Assignments\ASSIGM~1\PART1~1/../lib/keyboard.c
 0001                   .dbsym s key _key c
                        .area text
 0000                   .dbfile M:\SYSC20~2\Assignments\ASSIGM~1\PART1~1/../lib/keyboard.c
 0000                   .dbfunc e keyboard_init _keyboard_init fV
 0000           _keyboard_init::
 0000                   .dbline -1
 0000                   .dbline 21
 0000           ; // By Korey Conway and Tanzeel Rana
 0000           ; 
 0000           ; /*
 0000           ; * READ THIS NOTE!!!! INCLUDED FILES ARE IN THIS FILE, COMMENTED OUT BELOW
 0000           ; * The submit program won't let us sumbit the extra files, so here they are... commented out.
 0000           ; */
 0000           ; 
 0000           ; #include <hcs12dp256.h>
 0000           ; #include <stdio.h>
 0000           ; #include "../lib/keyboard.c"
 0000           ; 
 0000           ; int main()
 0000           ; {
 0000           ;       char key;
 0000           ;       
 0000           ;       // Setup terminal
 0000           ;       setbaud(BAUD19K);
 0000           ;       
 0000           ;       keyboard_init();
 0000           ;       INTR_ON();
 0000           ;       
 0000                   .dbline 22
 0000           ;       while ( 1 ) {
 0000 7900F0            clr 0xf0
 0003                   .dbline 24
 0003           ;               if ( key = keyboard_getchar() ) {
 0003           ;                       putchar(key);
 0003 1C025208          bset 0x252,#8
 0007                   .dbline 26
 0007           ;                       
 0007           ;                       if ( key == '0' ) {
 0007 1C025A0F          bset 0x25a,#15
 000B                   .dbline 27
 000B           ;                               break;
 000B 1C025008          bset 0x250,#8
 000F                   .dbline 28
 000F           ;                       }
 000F 1C02580F          bset 0x258,#15
 0013                   .dbline 29
 0013           ;                       
 0013 1D025008          bclr 0x250,#0x8
 0017                   .dbline 31
 0017           ;                       keyboard_clearchar();
 0017           ;               }
 0017 1D0262F0          bclr 0x262,#0xf0
 001B                   .dbline 32
 001B           ;       }
 001B 1C0265F0          bset 0x265,#240
 001F                   .dbline 33
 001F           ;       
 001F C6FF              ldab #255
 0021 7B0267            stab 0x267
 0024                   .dbline 34
 0024           ;       return 0;
 0024 790264            clr 0x264
 0027                   .dbline 35
 0027           ; }
 0027 1C0266F0          bset 0x266,#240
 002B                   .dbline -2
 002B                   .dbline 36
 002B           ; 
 002B           L3:
 002B                   .dbline 0 ; func end
 002B 3D                rts
 002C                   .dbend
 002C           L5:
 002C 3132              .byte 49,50
 002E 3341              .byte 51,'A
 0030 3435              .byte 52,53
 0032 3642              .byte 54,'B
 0034 3738              .byte 55,56
 0036 3943              .byte 57,'C
 0038 4530              .byte 'E,48
 003A 4644              .byte 'F,'D
 003C                   .dbfunc e keyboard_isr _keyboard_isr fV
 003C           ;       char_map -> -24,x
 003C           ;            row -> -8,x
 003C           ;       col_mask -> -6,x
 003C           ;            col -> -4,x
 003C           ;              i -> -2,x
 003C           _keyboard_isr::
 003C 34                pshx
 003D B775              tfr s,x
 003F 1BF1E4            leas -28,sp
 0042                   .dbline -1
 0042                   .dbline 43
 0042           ; /*
 0042           ; *
 0042           ; * The submit program won't let us sumbit the extra files, so here they are... commented out.
 0042           ; *
 0042           ; */
 0042           ; 
 0042           ; 
 0042                   .dbline 45
 0042           ; 
 0042           ; // // /* keyboard.c */
 0042 CC0000            ldd #0
 0045 6C18              std -8,x
 0047                   .dbline 46
 0047           ; // // By Korey Conway and Tanzeel Rana
 0047 CC0000            ldd #0
 004A 6C1C              std -4,x
 004C                   .dbline 47
 004C           ; 
 004C                   ; vol
 004C F60267            ldab 0x267
 004F 87                clra
 0050 47                asra
 0051 56                rorb
 0052 47                asra
 0053 56                rorb
 0054 47                asra
 0055 56                rorb
 0056 47                asra
 0057 56                rorb
 0058 6C1A              std -6,x
 005A                   .dbline 49
 005A           ; // #include <hcs12dp256.h>
 005A           ; 
 005A 19E1E8            leay -24,x
 005D B7C6              xgdy
 005F CD002C            ldy #L5
 0062 34                pshx
 0063 B745              tfr d,x
 0065 CC0008            ldd #8
 0068           X0:
 0068 18027131          movw 2,y+,2,x+
 006C 0434F9            dbne d,X0
 006F 30                pulx
 0070                   .dbline 54
 0070           ; // #define    KEYBOARD_ROWS           4
 0070           ; // #define    KEYBOARD_COLUMNS        4
 0070           ; // #define KEYBOARD_DEBOUNCE_DELAY    0x5000
 0070           ; // #define KEYBOARD_REPEAT_DELAY      0xF000
 0070           ; 
 0070 1410                      sei
 0072           
 0072                   .dbline 57
 0072 CC0000            ldd #0
 0075 6C18              std -8,x
 0077           L6:
 0077                   .dbline 57
 0077           ; // char keyboard_getchar(void);
 0077           ; // static void keyboard_init(void);
 0077           ; // static void keyboard_delay(unsigned int delay);
 0077                   .dbline 58
 0077           ; // static int  keyboard_get_column(void);
 0077 1C025008          bset 0x250,#8
 007B                   .dbline 59
 007B           ; 
 007B CC0001            ldd #1
 007E ED18              ldy -8,x
 0080 8D0000            cpy #0
 0083 2704              beq X1
 0085           X2:
 0085 59                lsld
 0086 0436FC            dbne y,X2
 0089           X1:
 0089 8400              anda #0
 008B C40F              andb #15
 008D 6CE1E6            std -26,x
 0090                   ; vol
 0090 F60258            ldab 0x258
 0093 87                clra
 0094 84FF              anda #255
 0096 C4F0              andb #240
 0098 AAE1E6            ora -26,x
 009B EAE1E7            orb -25,x
 009E 7B0258            stab 0x258
 00A1                   .dbline 60
 00A1 CC0000            ldd #0
 00A4 6C1E              std -2,x
 00A6           L10:
 00A6                   .dbline 60
 00A6           L11:
 00A6                   .dbline 60
 00A6           ; // /*
 00A6 EC1E              ldd -2,x
 00A8 C30001            addd #1
 00AB 6C1E              std -2,x
 00AD                   .dbline 60
 00AD EC1E              ldd -2,x
 00AF 8C1388            cpd #5000
 00B2 2DF2              blt L10
 00B4                   .dbline 61
 00B4           ;       // Initialize ports for keyboard
 00B4 1D025008          bclr 0x250,#0x8
 00B8                   .dbline 63
 00B8           ; // */
 00B8           ; // static void keyboard_init()
 00B8 1F0260F02E        brclr 0x260,#240,L14
 00BD                   .dbline 63
 00BD                   .dbline 65
 00BD CC0000            ldd #0
 00C0 6C1C              std -4,x
 00C2           L16:
 00C2                   .dbline 65
 00C2           ; // {
 00C2           ;       // SPI1CR1 = 0x00; // Turn off SPI (not explained why yet)
 00C2                   .dbline 66
 00C2           ;       // DDRP    = 0x0F; // Enable keyboard and disable motors on port P
 00C2 EC1A              ldd -6,x
 00C4 ED1C              ldy -4,x
 00C6 8D0000            cpy #0
 00C9 2705              beq X3
 00CB           X4:
 00CB 47                asra
 00CC 56                rorb
 00CD 0436FB            dbne y,X4
 00D0           X3:
 00D0 8400              anda #0
 00D2 C401              andb #1
 00D4 8C0000            cpd #0
 00D7 2702              beq L20
 00D9                   .dbline 66
 00D9                   .dbline 67
 00D9           ;       // DDRH   &= 0x0F; // Enable reading from keyboard (High bits of DDRH)
 00D9 2020              bra L8
 00DB           L20:
 00DB                   .dbline 69
 00DB           L17:
 00DB                   .dbline 65
 00DB EC1C              ldd -4,x
 00DD C30001            addd #1
 00E0 6C1C              std -4,x
 00E2                   .dbline 65
 00E2 EC1C              ldd -4,x
 00E4 8C0004            cpd #4
 00E7 2DD9              blt L16
 00E9                   .dbline 70
 00E9           ;       // DDRH   |= 0x08; // Enable writing to U7_EN
 00E9           ; // }
 00E9           ; 
 00E9 2010              bra L8
 00EB           L14:
 00EB                   .dbline 72
 00EB           L7:
 00EB                   .dbline 57
 00EB EC18              ldd -8,x
 00ED C30001            addd #1
 00F0 6C18              std -8,x
 00F2                   .dbline 57
 00F2 EC18              ldd -8,x
 00F4 8C0004            cpd #4
 00F7 182DFF7C          lblt L6
 00FB           L8:
 00FB                   .dbline 74
 00FB           ; // /*
 00FB           ;       // Get a character from the keyboard
 00FB           ; // */
 00FB           ; // char keyboard_getchar()
 00FB EC1C              ldd -4,x
 00FD 8C0004            cpd #4
 0100 2C25              bge L22
 0102 EC18              ldd -8,x
 0104 8C0004            cpd #4
 0107 2C1E              bge L22
 0109                   .dbline 74
 0109                   .dbline 75
 0109           ; // {
 0109 EC18              ldd -8,x
 010B 59                lsld
 010C 59                lsld
 010D 19E1E8            leay -24,x
 0110 6DE1E6            sty -26,x
 0113 E3E1E6            addd -26,x
 0116 6CE1E4            std -28,x
 0119 EC1C              ldd -4,x
 011B E3E1E4            addd -28,x
 011E B7C6              xgdy
 0120 E640              ldab 0,y
 0122 7B0000            stab _key
 0125                   .dbline 76
 0125 2003              bra L23
 0127           L22:
 0127                   .dbline 76
 0127           ;       // static int last_row = -1;
 0127                   .dbline 77
 0127           ;       // static int last_col = -1;
 0127 790000            clr _key
 012A                   .dbline 78
 012A           ;       // int row = 0;
 012A           L23:
 012A                   .dbline 80
 012A           ;       // int col = 0;
 012A           ;       // char char_map[KEYBOARD_ROWS][KEYBOARD_COLUMNS] =
 012A 1C025008          bset 0x250,#8
 012E                   .dbline 81
 012E           ;               // {{'1', '2', '3', 'A'},
 012E 1C02580F          bset 0x258,#15
 0132                   .dbline 82
 0132           ;               // {'4', '5', '6', 'B'},
 0132 1D025008          bclr 0x250,#0x8
 0136                   .dbline 83
 0136           ;               // {'7', '8', '9', 'C'},
 0136 C6FF              ldab #255
 0138 7B0267            stab 0x267
 013B                   .dbline 84
 013B           ;               // {'E', '0', 'F', 'D'}};
 013B 10EF                      cli
 013D           
 013D                   .dbline -2
 013D                   .dbline 85
 013D           ;       
 013D           L4:
 013D B757              tfr x,s
 013F 30                pulx
 0140                   .dbline 0 ; func end
 0140 0B                rti
 0141                   .dbsym l char_map -24 A[16:4:4]c
 0141                   .dbsym l row -8 I
 0141                   .dbsym l col_mask -6 I
 0141                   .dbsym l col -4 I
 0141                   .dbsym l i -2 I
 0141                   .dbend
 0141                   .dbfunc e keyboard_getchar _keyboard_getchar fc
 0141           _keyboard_getchar::
 0141                   .dbline -1
 0141                   .dbline 91
 0141           ;       // keyboard_init();
 0141           ; 
 0141           ;       // while ( 1 ) {
 0141           ;               // PTM |= 0x08;         // Set U7_EN high (PM3)
 0141           ;               // PTP  = 0x01 << row;  // Enable the correct row
 0141           ;               // PTM &= ~0x08;                // Set U7_EN low (PM3)
 0141                   .dbline 92
 0141           ;               
 0141 F60000            ldab _key
 0144 87                clra
 0145                   .dbline -2
 0145           L24:
 0145                   .dbline 0 ; func end
 0145 3D                rts
 0146                   .dbend
 0146                   .dbfunc e keyboard_clearchar _keyboard_clearchar fV
 0146           _keyboard_clearchar::
 0146                   .dbline -1
 0146                   .dbline 99
 0146           ;               // col = keyboard_get_column(); // Get the button that is pushed in that row (if any)
 0146           ; 
 0146           ;               // // Only react if a button was pushed
 0146           ;               // if ( col != -1 ) {
 0146           ;                       // if ( last_row == row && last_col == col ) {
 0146           ;                               // keyboard_delay(KEYBOARD_REPEAT_DELAY); // add delay for debounce
 0146           ;                       // } else {
 0146                   .dbline 100
 0146           ;                               // keyboard_delay(KEYBOARD_DEBOUNCE_DELAY); // add simple delay for repeat
 0146 790000            clr _key
 0149                   .dbline -2
 0149                   .dbline 101
 0149           ;                       // }
 0149           L25:
 0149                   .dbline 0 ; func end
 0149 3D                rts
 014A                   .dbend
 014A                   .dbfile M:\SYSC20~2\Assignments\ASSIGM~1\PART1~1\assign51.c
 014A                   .dbfunc e main _main fI
 014A           ;          ?temp -> -2,x
 014A           ;            key -> -1,x
 014A           _main::
 014A 34                pshx
 014B B775              tfr s,x
 014D 1B9E              leas -2,sp
 014F                   .dbline -1
 014F                   .dbline 13
 014F                   .dbline 17
 014F CC001A            ldd #26
 0152 160000            jsr _setbaud
 0155                   .dbline 19
 0155 160000            jsr _keyboard_init
 0158                   .dbline 20
 0158 10EF                      cli
 015A           
 015A 201E              bra L28
 015C           L27:
 015C                   .dbline 22
 015C                   .dbline 23
 015C 160141            jsr _keyboard_getchar
 015F 6B1E              stab -2,x
 0161 180A1E1F          movb -2,x,-1,x
 0165 E71E              tst -2,x
 0167 2711              beq L30
 0169                   .dbline 23
 0169                   .dbline 24
 0169 E61F              ldab -1,x
 016B 87                clra
 016C 160000            jsr _putchar
 016F                   .dbline 26
 016F E61F              ldab -1,x
 0171 C130              cmpb #48
 0173 2602              bne L32
 0175                   .dbline 26
 0175                   .dbline 27
 0175 2005              bra L29
 0177           L32:
 0177                   .dbline 30
 0177 160146            jsr _keyboard_clearchar
 017A                   .dbline 31
 017A           L30:
 017A                   .dbline 32
 017A           L28:
 017A                   .dbline 22
 017A 20E0              bra L27
 017C           L29:
 017C                   .dbline 34
 017C CC0000            ldd #0
 017F                   .dbline -2
 017F           L26:
 017F B757              tfr x,s
 0181 30                pulx
 0182                   .dbline 0 ; func end
 0182 3D                rts
 0183                   .dbsym l key -1 c
 0183                   .dbend
